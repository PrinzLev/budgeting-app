{"version":3,"sources":["components/Salary.jsx","components/BudgetAllocation.jsx","components/BudgetTable.jsx","components/App.jsx","index.js"],"names":["Salary","props","useState","inputSalary","setInputSalary","Zoom","in","onChange","e","newValue","target","value","type","placeholder","Fab","onClick","onSetSalary","preventDefault","variant","color","className","BudgetAllocation","item","budget","budgetItem","setBudgetItem","handleChange","event","name","prevItem","autoComplete","tableItem","BudgetTable","spentBudget","setSpentBudget","spentBudgetDefined","setSpentBudgeDefined","percentSpend","style","App","allocationTable","setAllocationTable","salary","setSalary","boolSalary","setBoolSalary","setBoolAllocation","src","newSalary","map","allocation","index","key","reduce","accumulator","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3218c67.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom'\r\n\r\nfunction Salary(props){\r\nconst [inputSalary, setInputSalary] = useState();\r\n\r\n\r\nfunction handleChange (e){\r\n    const newValue = e.target.value;\r\n    setInputSalary(newValue);\r\n}\r\nfunction handleClick (e){\r\n    props.onSetSalary(inputSalary)\r\n    setInputSalary(\"\");\r\n    e.preventDefault()\r\n}\r\nreturn (\r\n<div>\r\n    <form>\r\n        <h2>Salary:</h2>\r\n        <Zoom in={true}><input  onChange={handleChange} value={inputSalary} type=\"number\" placeholder=\"Enter salary . . .\"/></Zoom>\r\n        <Zoom in={true}><Fab onClick={handleClick} variant=\"extended\" color=\"primary\"><span className=\"set-button\">Set Salary ðŸ †</span></Fab></Zoom>\r\n    </form>\r\n</div>)\r\n\r\n}\r\n\r\n\r\nexport default Salary;\r\n","import React, { useState } from \"react\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom'\r\n\r\nfunction BudgetAllocation(props){\r\nconst [budgetItem, setBudgetItem] = useState({\r\n    item: \"\",\r\n    budget: null\r\n});\r\n\r\n\r\nfunction handleChange(event){\r\nconst  {name, value} = event.target\r\nsetBudgetItem(prevItem => ({...prevItem,\r\n    [name]: value})\r\n)\r\n}\r\nfunction handleClick(event){\r\nprops.tableItem(budgetItem)\r\nsetBudgetItem({\r\n    item: \"\",\r\n    budget: \"\"\r\n})\r\nevent.preventDefault()\r\n}\r\nreturn (\r\n<div>\r\n<h2>Budget Allocation:</h2>\r\n<form>\r\n    <Zoom in={true}><input onChange={handleChange} autoComplete =\"off\"name=\"item\" value ={budgetItem.item} type=\"text\" placeholder=\"Enter Spending Allocation\"/></Zoom>\r\n    <Zoom in={true}><input onChange={handleChange}  name=\"budget\" value={budgetItem.budget} type=\"number\" placeholder=\"Enter Budget\"/></Zoom>\r\n    <Zoom in={true}><Fab onClick={handleClick} variant=\"extended\" color=\"primary\"><span className=\"set-button\">Set Budget ðŸ †</span></Fab></Zoom>\r\n</form>\r\n</div>)\r\n}\r\n\r\nexport default BudgetAllocation;","import { green } from \"@material-ui/core/colors\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nfunction BudgetTable (props){\r\n    const [spentBudget, setSpentBudget] = useState();\r\n    const [spentBudgetDefined, setSpentBudgeDefined] = useState(false);\r\n    function handleChange(e){\r\n        const newValue = e.target.value\r\n        setSpentBudget(newValue);\r\n        setSpentBudgeDefined(true)\r\n    }\r\n\r\n    let percentSpend = (spentBudget/props.budget) * 100\r\n\r\n   \r\n        \r\n    \r\n\r\n    return(\r\n            <tr>\r\n            <td>\r\n                {props.item}\r\n                </td>\r\n                <td style={spentBudgetDefined ? {\r\n                color:  \r\n                percentSpend < 50 ? \"#79d70f\": \r\n                percentSpend < 100 ? \"#cdb30c\": \r\n                percentSpend === 100 ? \"#cdc9c3\":\r\n                percentSpend <= 125 ? \"#fca652\":\r\n                percentSpend > 125 && \"#bb2205\"}: \r\n                {color: \"white\"}}>\r\n                â‚±{spentBudgetDefined ? props.budget - spentBudget: props.budget}\r\n                </td>\r\n                <td>\r\n                <input onChange={handleChange} value={spentBudget} type=\"number\" placeholder=\"Enter spent amount\"/>\r\n                </td>\r\n            </tr>\r\n\r\n    )\r\n}\r\n\r\nexport default BudgetTable;","import React, { useState } from \"react\";\r\nimport Salary from \"./Salary\"\r\nimport BudgetAllocation from \"./BudgetAllocation\"\r\nimport BudgetTable from \"./BudgetTable\"\r\nfunction App(){\r\n\r\n    const [allocationTable, setAllocationTable] = useState([])\r\n    const [salary, setSalary] = useState(); \r\n    const [boolSalary, setBoolSalary] = useState(false);\r\n    const [boolAlloction, setBoolAllocation] = useState(false);\r\n\r\n    function enterSalary(newSalary) {\r\n        setSalary(newSalary);\r\n        setBoolSalary(true);\r\n        \r\n    }\r\n\r\n    function addBudgetAllocation (item){\r\n        setAllocationTable(prevItem => [\r\n            ...prevItem, item\r\n        ])\r\n        setBoolAllocation(true);\r\n        \r\n    }\r\n\r\n    return (<div>\r\n    <header><img className=\"app-logo\" src=\"output-onlinepngtools.png\"></img>\r\n    <div className=\"app-title\">\r\n    <h1>Budgeting\r\n    <br /> App\r\n    </h1>\r\n    </div></header>\r\n    <div className=\"input-section\">\r\n    <Salary onSetSalary={enterSalary}/>\r\n    <BudgetAllocation tableItem={addBudgetAllocation}/>\r\n    </div>\r\n    <div className=\"budget-table\">\r\n    <table>\r\n    <tr>\r\n            <th>\r\n            Monthly Spendings\r\n            </th>\r\n            <th>\r\n            Remaining Budget\r\n            </th>\r\n            <th>\r\n            Spent Budget\r\n            </th>\r\n    </tr>\r\n    \r\n    {allocationTable.map((allocation, index)=>{\r\n        return( <BudgetTable   key={index} item={allocation.item} budget={allocation.budget}/>)\r\n\r\n    })}\r\n    \r\n   {boolSalary && <tr className=\"salary\">\r\n        <td > \r\n        Salary\r\n        </td>\r\n        <td>\r\n        â‚±{salary}\r\n        </td>\r\n        <td></td>\r\n    </tr>}\r\n    {boolSalary && <tr className=\"savings\">\r\n        <td > \r\n        Saving\r\n        </td>\r\n        <td>\r\n        â‚±{allocationTable.reduce((accumulator, {budget}) => {return accumulator - budget}, salary)}\r\n        </td>\r\n    </tr>}\r\n        \r\n    </table>\r\n    </div>\r\n    </div>)\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\"\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}